ca_province <- rgdal::readOGR("canada_provinces.geojson")
ca_province$name
ca_data <- merge(x = ca_province, y = vac_province, by.x='name', by.y='Province')
View(vac_province)
View(vac_province)
x <- format(2132314.123, big.mark=",",scientific=FALSE)
x
typeof(x)
format(ca_data$Second_doses,big.mark=",",scientific=FALSE)
iszero <- function(x) {
for(val in x) {
if(val=="0") {
val<-"NA"
}
}
return(x)
}
iszero(format(ca_data$Second_doses,big.mark=",",scientific=FALSE))
format(ca_data$Second_doses,big.mark=",",scientific=FALSE)
as.numeric(format(ca_data$Second_doses,big.mark=",",scientific=FALSE))
iszero(ca_data$Second_doses)
format(ca_data$Second_doses,big.mark=",",scientific=FALSE)
typeof(format(ca_data$Second_doses,big.mark=",",scientific=FALSE))
as.numeric("123")
as.numeric("   123")
as.numeric("   0")
as.numeric(format(ca_data$Second_doses,big.mark=",",scientific=FALSE))
as.numeric("213,123")
iszero <- function(x) {
for(val in x) {
if(as.numeric(gsub(',', '', val))==0) {
val<-"NA"
}
}
return(x)
}
iszero(format(ca_data$Second_doses,big.mark=",",scientific=FALSE))
as.numeric(gsub(',', '', format(ca_data$Second_doses,big.mark=",",scientific=FALSE)))
as.numeric(gsub(',', '', format(ca_data$Second_doses,big.mark=",",scientific=FALSE)))==0
if (as.numeric(gsub(',', '', format(ca_data$Second_doses,big.mark=",",scientific=FALSE)))==0) {}
x <- format(ca_data$Second_doses,big.mark=",",scientific=FALSE)
x
for (val in x) {if(as.numeric(gsub(',', '', val))==0) {val<-NA}}
x
as.numeric(gsub(',', '', val))==0
as.numeric(gsub(',', '', val))==0
as.numeric(gsub(',', '', x))==0
iszero <- function(x) {
for(val in x) {
if(as.numeric(gsub(',', '', val))==0) {
val<-NA
}
}
print(x)
}
iszero(format(ca_data$Second_doses,big.mark=",",scientific=FALSE))
for(i in x) {}
for(i in x) {print(x)}
for(i in x) {print(1)}
for(i in x) {print(i)}
for(i in x) {if(as.numeric(gsub(',', '', i))==0){print(i)}}
for(i in x) {if(as.numeric(gsub(',', '', i))==0){i= 2;print(i)}}
for(i in x) {if(as.numeric(gsub(',', '', i))==0){i= NA;print(i)}}
iszero <- function(x) {
for(val in x) {
if(as.numeric(gsub(',', '', val))==0) {
val=NA
}
}
return(x)
}
iszero(format(ca_data$Second_doses,big.mark=",",scientific=FALSE))
x[2]
for(i in 10) {print(i)}
for(i in 1:10) {print(i)}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(rvest)
library(tidyverse)
library(dplyr)
library(knitr)
library(RSelenium)
library(rgdal)
## Data_2
vaccine_2 <- 'https://www.ctvnews.ca/health/coronavirus/coronavirus-vaccine-tracker-how-many-people-in-canada-have-received-shots-1.5247509?fbclid=IwAR3HMQewAhl4fmp8SisM6Pdq-xQN-hG9sa0Q9C1ugzqlNa8UZNGblDHGBcA'
rD <- rsDriver(browser="firefox", port=1998L, verbose=F)
remDr <- rD[["client"]]
remDr$navigate(vaccine_2)
install.packages(rgeos)
install.packages("rgeos")
install.packages("maptools")
install.packages("ggmap")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("./data/cases_by_status_and_phu.csv", header=T)
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("Ministry_of_Health_Public_Health_Unit_Boundary.shp")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("Ministry_of_Health_Public_Health_Unit_Boundary.shp")
ca_province <- rgdal::readOGR("canada_provinces.geojson")
View(ca_province)
View(ca_province)
ca_province$name
ca_data <- merge(x = ca_province, y = vac_province, by.x='name', by.y='Province')
vac_province <- read.csv("vaccine_province.csv")
ca_province <- rgdal::readOGR("canada_provinces.geojson")
ca_province$name
ca_data <- merge(x = ca_province, y = vac_province, by.x='name', by.y='Province')
View(ca_data)
View(ca_data)
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("./PHU/Ministry_of_Health_Public_Health_Unit_Boundary.shp")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("Ministry_of_Health_Public_Health_Unit_Boundary.shp")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("./PHU/Ministry_of_Health_Public_Health_Unit_Boundary.shp")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("./PHU/Ministry_of_Health_Public_Health_Unit_Boundary.shp")
spatial_data <- phu@polygons[[1]]@Polygons[[1]]@coords
phu_id <- rep(phu@data[1,]$PHU_ID, length(spatial_data[,1]))
ontario_spatial_data <- data.frame(PHU_NUM = phu_id, long = spatial_data[,1], lat = spatial_data[,2])
for(i in 2:length(phu)) {
spatial_data = phu@polygons[[i]]@Polygons[[1]]@coords
#print(paste0("PHU #", i))
phu_id <- rep(phu@data[i,]$PHU_ID, length(spatial_data[,1]))
df <- data.frame(PHU_NUM = phu_id, long = spatial_data[,1], lat = spatial_data[,2])
ontario_spatial_data <- rbind(ontario_spatial_data, df)
}
ontario_spatial_data <- na.omit(ontario_spatial_data)
ontario_covid_data <- ontario.data %>%
filter(
FILE_DATE == "2021-02-14"
)
ontario_total_data <- merge(ontario_spatial_data, ontario_covid_data, by="PHU_NUM")
ontario_total_data$ACTIVE_CASE_INTERVALS<-c( "0-50", "51-100", "101-200", "201-500", ">500")[
findInterval(ontario_total_data$ACTIVE_CASES , c(0, 50, 100, 200, 500, Inf) ) ]
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("./PHU/Ministry_of_Health_Public_Health_Unit_Boundary.shp")
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
library(ggplot2)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("./PHU/Ministry_of_Health_Public_Health_Unit_Boundary.shp")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
library(ggplot2)
library(ggiraph)
install.packages("ggiraph")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
library(ggplot2)
library(ggiraph)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("./PHU/Ministry_of_Health_Public_Health_Unit_Boundary.shp")
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
install.packages("hrbrthemes")
library(rgeos)
library(maptools)
library(ggmap)
library(raster)
library(plotly)
library(ggplot2)
library(ggiraph)
library(hrbrthemes)
ontario.data = read.csv("cases_by_status_and_phu.csv", header=T)
phu <- shapefile("./PHU/Ministry_of_Health_Public_Health_Unit_Boundary.shp")
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
#widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
install.packages("sf")
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
#widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASES,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
install.packages("widgetframe")
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
#ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
#ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
#ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
#ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
#ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggiraph))
suppressPackageStartupMessages(library(gridExtra))
tooltip_css <- "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;"
g <- ggplot(ontario_total_data) +
geom_polygon_interactive(
color='black',
aes(long, lat, group=PHU_NUM, fill=ACTIVE_CASE_INTERVALS,
tooltip=sprintf("%s<br/>%s:%s<br/>%s:%s<br/>%s:%s<br/>", PHU_NAME, "Active Cases", ACTIVE_CASES,
"Total Death", DEATHS, "Resolved Cases", RESOLVED_CASES))) +
scale_fill_manual(name = "Active Case Intervals",
values = c("#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#01579B"),
breaks = c( "0-50", "51-100", "101-200", "201-500", ">500"))
#scale_fill_gradient(name = 'Active Cases', low = "#E3F2FD", high = "#0D47A1")+
hrbrthemes::theme_ipsum() +
labs(title='Status of COVID-19 cases in Ontario by Public Health Unit ')
#       caption='Source: https://data.ontario.ca/dataset/status-of-covid-19-cases-in-ontario-by-public-health-unit-phu')
widgetframe::frameWidget(ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9))
#ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#renderggiraph({
#    ggiraph(code=print(g), tooltip_extra_css = tooltip_css, tooltip_opacity = .9)
#})
library(flexdashboard)
library(leaflet)
library(maps)
library(raster)
library(sp)
library(rgdal)
library(jsonlite)
on_city <- rgdal::readOGR("Ministry_of_Health_Public_Health_Unit_Boundary.geojson")
pal <- colorNumeric("viridis", NULL)
## Return NA instead of 0
# iszero <- function(x) {
#   for(i in 1:length(x)) {
#     if(as.numeric(gsub(',', '', x[i]))==0) {
#       x[i]=NA
#     }
#   }
#   return(x)
# }
# info <- sprintf(
#   "<strong>%s</strong><br/>Total Vaccine: %s
#   <br/>Percent of People Vaccinated: %.2f%%<br/>First doses: %s<br/>Second doses: %s<br/>Received doses administered: %.2f%%",
#   ca_data$name, format(ca_data$Total,big.mark=",",scientific=FALSE),
#   ca_data$Percent_of_population_Vaccinated,
#   format(ca_data$First_doses,big.mark=",",scientific=FALSE), iszero(format(ca_data$Second_doses,big.mark=",",scientific=FALSE)),
#   ca_data$Received_doses_administered
# ) %>% lapply(htmltools::HTML)
View(ontario.data)
View(ontario.data)
View(on_city)
View(on_city)
